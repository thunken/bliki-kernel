package info.bliki.api;

import java.util.ArrayList;
import java.util.List;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;

import info.bliki.util.Throwables;
import lombok.extern.slf4j.Slf4j;

/**
 * Reads <code>SearchResult</code> data from an XML file generated by the
 * <a href="https://meta.wikimedia.org/w/api.php">Wikimedia API</a> through the <code>search</code> query.
 */
@Slf4j
public class XMLSearchParser extends AbstractXMLParser {

	private static final String SEARCH_TAG = "search";
	private static final String SIZE_ID = "size";
	private static final String SNIPPET_ID = "snippet";
	private static final String SROFFSET_ID = "sroffset";
	private static final String TIMESTAMP_ID = "timestamp";
	private static final String WORDCOUNT_ID = "wordcount";

	private SearchResult fSearchResult;

	private final List<SearchResult> searchResultsList;

	private String srOffset;

	public XMLSearchParser(final String xmlText) throws SAXException {
		super(xmlText);
		searchResultsList = new ArrayList<>();
		srOffset = "";
	}

	@Override
	public void endElement(final String uri, final String name, final String qName) {
		try {
			if (PAGE_TAG2.equals(qName)) {
				if (fSearchResult != null) {
					searchResultsList.add(fSearchResult);
				}
			}

			fData = null;
			fAttributes = null;

		} catch (final RuntimeException e) {
			Throwables.log(log, e);
		}
	}

	public List<SearchResult> getSearchResultList() {
		return searchResultsList;
	}

	/**
	 * @return the srOffset
	 */
	public String getSrOffset() {
		if (srOffset == null) {
			return "";
		}
		return srOffset;
	}

	@Override
	public void startElement(final String namespaceURI, final String localName, final String qName,
			final Attributes atts) {
		fAttributes = atts;

		if (PAGE_TAG2.equals(qName)) {
			fSearchResult = new SearchResult();
			fSearchResult.setNs(fAttributes.getValue(NS_ID));
			fSearchResult.setTitle(fAttributes.getValue(TITLE_ID));
			fSearchResult.setSize(fAttributes.getValue(SIZE_ID));
			fSearchResult.setSnippet(fAttributes.getValue(SNIPPET_ID));
			fSearchResult.setTimestamp(fAttributes.getValue(TIMESTAMP_ID));
			fSearchResult.setWordCount(fAttributes.getValue(WORDCOUNT_ID));
		} else if (SEARCH_TAG.equals(qName)) {
			final String value = fAttributes.getValue(SROFFSET_ID);
			if (value != null) {
				srOffset = value;
			}
		}
		fData = null;
	}

}
